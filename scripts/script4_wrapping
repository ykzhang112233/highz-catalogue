#!/usr/bin/env bash

# Script Description:
# 
###########################################
##### 1. Init ##### 
clear
# set -x
# Get Directory where script is located
# BASEDIR is the directory where the script is located; CAT_DIR is the directory where the catalogues are located
BASEDIR=$(dirname "$0")
CAT_DIR="${BASEDIR}/../catalogues"
TEMP_DIR=${BASEDIR}
echo "BASEDIR: $BASEDIR"

# Change Shell execution to the place where the script lies
cd "$BASEDIR"

# Path to stilts program
stilts_dir="${BASEDIR}/stilts.jar"


############################################################
##### 2. Define input paths from the previous output #####
# The names are based on the previous script outputs
cat_o1="${TEMP_DIR}/tmp_sdss16_qg.fits"  #optical catalogue1
cat_sdss_hz="${TEMP_DIR}/tmp_sdssz3.fits"
matched_r1="${TEMP_DIR}/mr1_t123.fits" # matched radio catalogue1
matched_r2="${TEMP_DIR}/mr2_t123.fits"  # matched radio catalogue2
matched_r3="${TEMP_DIR}/mr3_t123.fits" # matched radio catalogue3
matched_r4="${TEMP_DIR}/mr4_t123.fits"  # matched radio catalogue4
############################################################
# 3. Group the matched catalogues
echo "Final step starting"
echo "Grouping matched catalogues...(1/4)"
java -jar $stilts_dir tmatchn multimode=group nin=4 matcher=exact \
    in1="${matched_r1}" in2="${matched_r2}" in3="${matched_r3}" in4="${matched_r4}" \
    join1="always" join2="always" join3="always" join4="always" \
    values1='SDSS_NAME_o1' values2='SDSS_NAME_o1' values3='SDSS_NAME_o1' values4='SDSS_NAME_o1' \
    suffix1='_first' suffix2='_nvss' suffix3='_gleam' suffix4='_racs' \
    fixcols='dups' \
    out="${TEMP_DIR}/match1_o1r1234.fits"
# 4 check the columns in the grouped catalogue and make unified optical columns
## 4.1 Based on the grouped catalogue, combine the optical columns and output as a _total catalogue for referencing
### for the following col names which are duplicated in the grouped catalogue, we will combine them into one column: 
### inverse order of "SDSS_NAME RA DEC Z SOURCE_Z Z_PIPE ZWARNING Z_VI Z_CONF IS_QSO_QN Z_QN Z_10K Z_CONF_10K Z_PCA ZWARN_PCA"

generate_stilts_cmds() {
    # 倒序列名（先手动写好）
    cols=(ZWARN_PCA Z_PCA Z_CONF_10K Z_10K Z_QN IS_QSO_QN Z_CONF Z_VI ZWARNING Z_PIPE SOURCE_Z Z class DEC RA SDSS_NAME)
    new_columns=(sdss_zwarn_pca sdss_z_pca sdss_z_conf_10k sdss_z_10k sdss_z_qn sdss_is_qso_qn sdss_z_conf sdss_z_vi sdss_zwarning sdss_z_pipe sdss_source_z sdss_z sdss_class sdss_dec sdss_ra sdss_name)
    index=0  # 从 cmd_comb1 开始
    for col in "${cols[@]}"; do
        # 构造替代表达式
        expr="!NULL_${col}_o1_first ? ${col}_o1_first : (!NULL_${col}_o1_nvss ? ${col}_o1_nvss : (!NULL_${col}_o1_gleam ? ${col}_o1_gleam : ${col}_o1_racs))"

        # 构造 addcol 命令
        echo "cmd_comb$((index+1))='addcol -before \$1 ${new_columns[$index]} \"$expr\"'"

        # 构造 delcols 命令
        echo "cmd_del$((index+1))='delcols \"${col}_o1_first ${col}_o1_nvss ${col}_o1_gleam ${col}_o1_racs\"'"

        ((index++))
    done
}
# # commands to combine the columns
# cmd_cmob1='addcol -before $1 sdss_zconf "!NULL_Z_CONF_o1_first ? Z_CONF_o1_first : (!NULL_Z_CONF_o1_nvss ? Z_CONF_o1_nvss : (!NULL_Z_CONF_o1_gleam ? Z_CONF_o1_gleam : Z_CONF_o1_racs))"'
# cmd_cmob3='addcol -before $1 sdss_zvi "!NULL_Z_VI_o1_first ? Z_VI_o1_first : (!NULL_Z_VI_o1_nvss ? Z_VI_o1_nvss : (!NULL_Z_VI_o1_gleam ? Z_VI_o1_gleam : Z_VI_o1_racs))"'
# cmd_cmobx='addcol -before $1 sdss_zwarning "!NULL_ZWARNING_o1_first ? ZWARNING_o1_first : (!NULL_ZWARNING_o1_nvss ? ZWARNING_o1_nvss : (!NULL_ZWARNING_o1_gleam ? ZWARNING_o1_gleam : ZWARNING_o1_racs))"'
# cmd_cmob2='addcol -before $1 sdss_zpipe "!NULL_Z_PIPE_o1_first ? Z_PIPE_o1_first : (!NULL_Z_PIPE_o1_nvss ? Z_PIPE_o1_nvss : (!NULL_Z_PIPE_o1_gleam ? Z_PIPE_o1_gleam : Z_PIPE_o1_racs))"'
# cmd_cmob4='addcol -before $1 sdss_source_z "!NULL_SOURCE_Z_o1_first ? SOURCE_Z_o1_first : (!NULL_SOURCE_Z_o1_nvss ? SOURCE_Z_o1_nvss : (!NULL_SOURCE_Z_o1_gleam ? SOURCE_Z_o1_gleam : SOURCE_Z_o1_racs))"'
# cmd_comb5='addcol -before $1 sdss_z "!NULL_Z_o1_first ? Z_o1_first : (!NULL_Z_o1_nvss ? Z_o1_nvss : (!NULL_Z_o1_gleam ? Z_o1_gleam : Z_o1_racs))"'
# cmd_comb6='addcol -before $1 sdss_dec "!NULL_DEC_o1_first ? DEC_o1_first : (!NULL_DEC_o1_nvss ? DEC_o1_nvss : (!NULL_DEC_o1_gleam ? DEC_o1_gleam : DEC_o1_racs))"'
# cmd_comb14='addcol -before $1 sdss_ra "!NULL_RA_o1_first ? RA_o1_first : (!NULL_RA_o1_nvss ? RA_o1_nvss : (!NULL_RA_o1_gleam ? RA_o1_gleam : RA_o1_racs))"'
# cmd_comb15='addcol -before $1 sdss_name "!NULL_SDSS_NAME_o1_first ? SDSS_NAME_o1_first : (!NULL_SDSS_NAME_o1_nvss ? SDSS_NAME_o1_nvss : (!NULL_SDSS_NAME_o1_gleam ? SDSS_NAME_o1_gleam : SDSS_NAME_o1_racs))"'
# cmd_comb13='addcol -before $1 sdss_ra "!NULL_SDSS_NAME_o1_first ? SDSS_NAME_o1_first : (!NULL_SDSS_NAME_o1_nvss ? SDSS_NAME_o1_nvss : (!NULL_SDSS_NAME_o1_gleam ? SDSS_NAME_o1_gleam : SDSS_NAME_o1_racs))"'
# cmd_del13='delcols "SDSS_NAME_o1_first SDSS_NAME_o1_nvss SDSS_NAME_o1_gleam SDSS_NAME_o1_racs"'
# # command for deleting the original columns
# cmd_del1='delcols "Z_CONF_o1_first Z_CONF_o1_nvss Z_CONF_o1_gleam Z_CONF_o1_racs"'
# cmd_del2='delcols "Z_PIPE_o1_first Z_PIPE_o1_nvss Z_PIPE_o1_gleam Z_PIPE_o1_racs"'
# cmd_del3='delcols "Z_VI_o1_first Z_VI_o1_nvss Z_VI_o1_gleam Z_VI_o1_racs"'
# cmd_del4='delcols "SOURCE_Z_o1_first SOURCE_Z_o1_nvss SOURCE_Z_o1_gleam SOURCE_Z_o1_racs"'
# cmd_del5='delcols "Z_o1_first Z_o1_nvss Z_o1_gleam Z_o1_racs"'
# cmd_del6='delcols "DEC_o1_first DEC_o1_nvss DEC_o1_gleam DEC_o1_racs"'
# cmd_del14='delcols "RA_o1_first RA_o1_nvss RA_o1_gleam RA_o1_racs"'
# cmd_del15='delcols "SDSS_NAME_o1_first SDSS_NAME_o1_nvss SDSS_NAME_o1_gleam SDSS_NAME_o1_racs"'
# generate the commands for combining and deleting columns
eval "$(generate_stilts_cmds)"
# select the raws based on the non-null values of their tiers
cmd_selection='select "!NULL_source_tier_first || !NULL_source_tier_nvss || !NULL_source_tier_gleam || !NULL_source_tier_racs"'
# 4.2 the main tpipe run for this
java -jar $stilts_dir tpipe \
    in="${TEMP_DIR}/match1_o1r1234.fits" \
    cmd="$cmd_cmob1" cmd="$cmd_cmob2" cmd="$cmd_cmob3" cmd="$cmd_cmob4" \
    cmd="$cmd_comb5" cmd="$cmd_comb6" cmd="$cmd_comb7" cmd="$cmd_comb8" \
    cmd="$cmd_comb9" cmd="$cmd_comb10" cmd="$cmd_comb11" cmd="$cmd_comb12" \
    cmd="$cmd_comb13" cmd="$cmd_comb14" cmd="$cmd_comb15" cmd="$cmd_comb16"  \
    cmd="$cmd_del1" cmd="$cmd_del2" cmd="$cmd_del3" cmd="$cmd_del4" \
    cmd="$cmd_del5" cmd="$cmd_del6" cmd="$cmd_del7" cmd="$cmd_del8" \
    cmd="$cmd_del9" cmd="$cmd_del10" cmd="$cmd_del11" cmd="$cmd_del12" \
    cmd="$cmd_del13" cmd="$cmd_del14" cmd="$cmd_del15" cmd="$cmd_del16" \
    cmd="$cmd_selection" \
    out="${TEMP_DIR}/ref_o1r1234_all_sources.fits"
echo "renaming and selecting columns for the final catalogue...(2/4)"
# 5. Now make the final catalogue for the matched high-z sources
# 5.1 Define the columns to keep in the final catalogue
Cols_final='keepcols "sdss_name sdss_ra sdss_dec sdss_class sdss_z sdss_source_z sdss_zwarning z_reliable_flag\
                      FIRST_r1 source_tier_first Fpeak_r1 Fint_r1 Rms_r1 \
                      NVSS_r2 source_tier_nvss S1.4_r2 e_S1.4_r2 \
                      GLEAM_r3 source_tier_gleam Fpwide_r3 e_Fpwide_r3 Fintwide_r3 e_Fintwide_r3 \
                      RACS-DR1_r4 source_tier_racs Fpk_r4 e_Fpk_r4 Ftot_r4 e_Ftot_r4"'



# selection_final='select "sdss_z >=3"'
# the replaced selection_final will select the sources with at least one tier of radio source rather than only sdss_z >= 3
selection_final='select "(!NULL_source_tier_first && source_tier_first > 0) ||
                        (!NULL_source_tier_nvss && source_tier_nvss > 0) ||
                        (!NULL_source_tier_gleam && source_tier_gleam > 0) ||
                        (!NULL_source_tier_racs && source_tier_racs > 0)"'
java -jar $stilts_dir tpipe \
    in="${TEMP_DIR}/ref_o1r1234_all_sources.fits" \
    cmd="$selection_final" \
    out="${TEMP_DIR}/matched_radio_highz_catalogue.fits"
echo "(3/4) just before final catalogue, radio version created at: ${TEMP_DIR}/matched_radio_highz_catalogue.fits"

# add the z_reliable_flag column to the final catalogue, demostrating the reliability of the redshift
z_flag_cmd1='addcol -before $5 z_reliable_flag "equals(sdss_source_z, \"VI\") ? 1 : 0"'
z_flag_cmd2='replacecol z_reliable_flag "z_reliable_flag == 0 && equals(sdss_source_z, \"PIPE\") && sdss_zwarning == 0 ? 2 : z_reliable_flag"'
z_flag_cmd3='replacecol z_reliable_flag "z_reliable_flag == 0 && equals(sdss_source_z, \"PIPE\") && sdss_zwarning != 0 ? 3 : z_reliable_flag"'
z_flag_cmd4='replacecol z_reliable_flag "z_reliable_flag == 0 ? 1 : z_reliable_flag"'

# 5.2 Add the z_reliable_flag column to the final catalogue
java -jar $stilts_dir tpipe ifmt=fits \
    in="${TEMP_DIR}/matched_radio_highz_catalogue.fits" \
    cmd="$z_flag_cmd1" \
    cmd="$z_flag_cmd2" \
    cmd="$z_flag_cmd3" \
    cmd="$z_flag_cmd4" \
    cmd="$Cols_final" \
    out="${TEMP_DIR}/final_matched_highz_catalogue.fits"
echo "(4/4) Finished processing for flagging all redshift tiers as well, output saved to ${TEMP_DIR}/final_matched_highz_catalogue.fits "

exit


